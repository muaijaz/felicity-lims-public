# syntax=docker/dockerfile:1.4
FROM node:18.20.4-alpine AS webapp

# Install system dependencies in one layer
RUN apk update && apk add --no-cache bash \
    && npm i -g pnpm \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Copy dependency files first (better layer caching)
COPY package.json pnpm-lock.yaml ./

# Use BuildKit cache mount for faster pnpm installs
RUN --mount=type=cache,target=/root/.local/share/pnpm/store \
    pnpm install

# Copy application code (changes more frequently)
COPY index.html ./
COPY public ./public
COPY webapp ./webapp
COPY *.js *.json ./

FROM tiangolo/uvicorn-gunicorn:python3.11 AS webapi
LABEL maintainer="Sebastian Ramirez <tiangolo@gmail.com>"

# Install build dependencies in one layer and clean up
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        git \
        libpq-dev \
        gcc \
        g++ \
        poppler-utils \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy and install Python dependencies first (better layer caching)
COPY requirements.txt /tmp/requirements.txt

# Use BuildKit cache mount for pip packages (massive speedup on Apple Silicon)
# Install with ARM64-optimized flags
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip wheel setuptools \
    && pip install --upgrade --no-cache-dir -r /tmp/requirements.txt

# Copy application code (changes more frequently)
COPY . /app

# Install app in editable mode
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -e .

ENV PYTHONPATH=/app
