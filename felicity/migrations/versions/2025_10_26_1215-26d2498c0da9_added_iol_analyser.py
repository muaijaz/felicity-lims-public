"""added iol analyser

Revision ID: 26d2498c0da9
Revises: d9ba3ba7cecf
Create Date: 2025-10-26 12:15:12.868278

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '26d2498c0da9'
down_revision = 'd9ba3ba7cecf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instrument_result_exclusions',
    sa.Column('instrument_uid', sa.String(), nullable=False),
    sa.Column('result', sa.String(length=100), nullable=True),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['instrument_uid'], ['instrument.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('result')
    )
    op.create_index(op.f('ix_instrument_result_exclusions_uid'), 'instrument_result_exclusions', ['uid'], unique=False)
    op.create_table('instrument_result_translations',
    sa.Column('instrument_uid', sa.String(), nullable=False),
    sa.Column('original', sa.String(length=100), nullable=True),
    sa.Column('translated', sa.String(length=100), nullable=True),
    sa.Column('keyword', sa.String(length=50), nullable=True),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['instrument_uid'], ['instrument.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('original', 'translated', 'keyword', name='uq_result_translation')
    )
    op.create_index(op.f('ix_instrument_result_translations_uid'), 'instrument_result_translations', ['uid'], unique=False)
    op.create_table('instrument_raw_data',
    sa.Column('content', sa.Text(), nullable=False),  # Changed from mysql.LONGTEXT() for PostgreSQL compatibility
    sa.Column('laboratory_instrument_uid', sa.String(), nullable=True),  # Changed from sa.Integer() to match laboratory_instrument.uid type
    sa.Column('is_transformed', sa.Boolean(), nullable=False),
    sa.Column('transformation_attempts', sa.Integer(), nullable=False),
    sa.Column('last_transformation_attempt', sa.DateTime(), nullable=True),
    sa.Column('transformation_error', sa.Text(), nullable=True),  # Changed from mysql.LONGTEXT() for PostgreSQL compatibility
    sa.Column('laboratory_uid', sa.String(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_uid', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_uid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_uid'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['laboratory_instrument_uid'], ['laboratory_instrument.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['laboratory_uid'], ['laboratory.uid'], ),
    sa.ForeignKeyConstraint(['updated_by_uid'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_instrument_raw_data_laboratory_uid'), 'instrument_raw_data', ['laboratory_uid'], unique=False)
    op.create_index(op.f('ix_instrument_raw_data_uid'), 'instrument_raw_data', ['uid'], unique=False)
    op.add_column('laboratory_instrument', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('laboratory_instrument', sa.Column('is_interfacing', sa.Boolean(), nullable=False))
    op.add_column('laboratory_instrument', sa.Column('host', sa.String(length=100), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('port', sa.Integer(), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('path', sa.String(length=20), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('baud_rate', sa.Integer(), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('auto_reconnect', sa.Boolean(), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('connection_type', sa.String(length=10), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('protocol_type', sa.String(length=10), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('socket_type', sa.String(length=10), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('connection', sa.String(length=20), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('transmission', sa.String(length=20), nullable=True))
    op.add_column('laboratory_instrument', sa.Column('sync_units', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('laboratory_instrument', 'sync_units')
    op.drop_column('laboratory_instrument', 'transmission')
    op.drop_column('laboratory_instrument', 'connection')
    op.drop_column('laboratory_instrument', 'socket_type')
    op.drop_column('laboratory_instrument', 'protocol_type')
    op.drop_column('laboratory_instrument', 'connection_type')
    op.drop_column('laboratory_instrument', 'auto_reconnect')
    op.drop_column('laboratory_instrument', 'baud_rate')
    op.drop_column('laboratory_instrument', 'path')
    op.drop_column('laboratory_instrument', 'port')
    op.drop_column('laboratory_instrument', 'host')
    op.drop_column('laboratory_instrument', 'is_interfacing')
    op.drop_column('laboratory_instrument', 'is_active')
    op.drop_index(op.f('ix_instrument_raw_data_uid'), table_name='instrument_raw_data')
    op.drop_index(op.f('ix_instrument_raw_data_laboratory_uid'), table_name='instrument_raw_data')
    op.drop_table('instrument_raw_data')
    op.drop_index(op.f('ix_instrument_result_translations_uid'), table_name='instrument_result_translations')
    op.drop_table('instrument_result_translations')
    op.drop_index(op.f('ix_instrument_result_exclusions_uid'), table_name='instrument_result_exclusions')
    op.drop_table('instrument_result_exclusions')
    # ### end Alembic commands ###
