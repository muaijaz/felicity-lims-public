"""add patient medical history and insurance entities

Revision ID: patient_medical_history
Revises: add_driver_mapping
Create Date: 2025-10-27 17:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'patient_medical_history'
down_revision = 'add_driver_mapping'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create insurance_company table
    op.create_table(
        'insurance_company',
        sa.Column('uid', sa.String(), nullable=False),
        sa.Column('created_by_uid', sa.String(), nullable=True),
        sa.Column('updated_by_uid', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('code', sa.String(), nullable=True),
        sa.Column('address_line1', sa.String(), nullable=True),
        sa.Column('address_line2', sa.String(), nullable=True),
        sa.Column('city', sa.String(), nullable=True),
        sa.Column('state', sa.String(), nullable=True),
        sa.Column('zip_code', sa.String(), nullable=True),
        sa.Column('country', sa.String(), nullable=True),
        sa.Column('phone', sa.String(), nullable=True),
        sa.Column('fax', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('website', sa.String(), nullable=True),
        sa.Column('claims_address', sa.String(), nullable=True),
        sa.Column('electronic_payer_id', sa.String(), nullable=True),
        sa.Column('clearinghouse', sa.String(), nullable=True),
        sa.Column('fhir_endpoint', sa.String(), nullable=True),
        sa.Column('api_credentials', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_insurance_company_code'), 'insurance_company', ['code'], unique=True)
    op.create_index(op.f('ix_insurance_company_name'), 'insurance_company', ['name'], unique=True)

    # Create patient_medical_history table
    op.create_table(
        'patient_medical_history',
        sa.Column('uid', sa.String(), nullable=False),
        sa.Column('created_by_uid', sa.String(), nullable=True),
        sa.Column('updated_by_uid', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('laboratory_uid', sa.String(), nullable=True),
        sa.Column('patient_uid', sa.String(), nullable=False),
        sa.Column('chronic_conditions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('treatment_history', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('allergies', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('immunizations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('travel_history', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('menstrual_status', sa.LargeBinary(), nullable=True),
        sa.Column('pregnancy_status', sa.Boolean(), nullable=True),
        sa.Column('pregnancy_due_date', sa.LargeBinary(), nullable=True),
        sa.Column('gravida', sa.Integer(), nullable=True),
        sa.Column('para', sa.Integer(), nullable=True),
        sa.Column('family_history', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('surgical_history', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('smoking_status', sa.String(), nullable=True),
        sa.Column('alcohol_use', sa.String(), nullable=True),
        sa.Column('drug_use', sa.String(), nullable=True),
        sa.Column('occupation', sa.String(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['laboratory_uid'], ['laboratory.uid'], ),
        sa.ForeignKeyConstraint(['patient_uid'], ['patient.uid'], ),
        sa.PrimaryKeyConstraint('uid'),
        sa.UniqueConstraint('patient_uid')
    )

    # Create patient_insurance table
    op.create_table(
        'patient_insurance',
        sa.Column('uid', sa.String(), nullable=False),
        sa.Column('created_by_uid', sa.String(), nullable=True),
        sa.Column('updated_by_uid', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('laboratory_uid', sa.String(), nullable=True),
        sa.Column('patient_uid', sa.String(), nullable=False),
        sa.Column('priority', sa.String(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('insurance_company_uid', sa.String(), nullable=False),
        sa.Column('policy_number', sa.LargeBinary(), nullable=False),
        sa.Column('group_number', sa.String(), nullable=True),
        sa.Column('plan_name', sa.String(), nullable=True),
        sa.Column('subscriber_is_patient', sa.Boolean(), nullable=True),
        sa.Column('subscriber_first_name', sa.LargeBinary(), nullable=True),
        sa.Column('subscriber_last_name', sa.LargeBinary(), nullable=True),
        sa.Column('subscriber_dob', sa.LargeBinary(), nullable=True),
        sa.Column('subscriber_gender', sa.String(), nullable=True),
        sa.Column('subscriber_id', sa.LargeBinary(), nullable=True),
        sa.Column('relationship_to_patient', sa.String(), nullable=True),
        sa.Column('effective_date', sa.Date(), nullable=True),
        sa.Column('termination_date', sa.Date(), nullable=True),
        sa.Column('copay_amount', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('deductible_amount', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('invoice_to_insurance', sa.Boolean(), nullable=True),
        sa.Column('requires_authorization', sa.Boolean(), nullable=True),
        sa.Column('authorization_number', sa.String(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['insurance_company_uid'], ['insurance_company.uid'], ),
        sa.ForeignKeyConstraint(['laboratory_uid'], ['laboratory.uid'], ),
        sa.ForeignKeyConstraint(['patient_uid'], ['patient.uid'], ),
        sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_patient_insurance_priority'), 'patient_insurance', ['priority'], unique=False)

    # Create guarantor table
    op.create_table(
        'guarantor',
        sa.Column('uid', sa.String(), nullable=False),
        sa.Column('created_by_uid', sa.String(), nullable=True),
        sa.Column('updated_by_uid', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('laboratory_uid', sa.String(), nullable=True),
        sa.Column('patient_uid', sa.String(), nullable=False),
        sa.Column('is_patient', sa.Boolean(), nullable=True),
        sa.Column('guarantor_id', sa.String(), nullable=True),
        sa.Column('first_name', sa.LargeBinary(), nullable=True),
        sa.Column('last_name', sa.LargeBinary(), nullable=True),
        sa.Column('date_of_birth', sa.LargeBinary(), nullable=True),
        sa.Column('gender', sa.String(), nullable=True),
        sa.Column('relationship_to_patient', sa.String(), nullable=True),
        sa.Column('address_line1', sa.LargeBinary(), nullable=True),
        sa.Column('address_line2', sa.LargeBinary(), nullable=True),
        sa.Column('city', sa.LargeBinary(), nullable=True),
        sa.Column('state', sa.String(), nullable=True),
        sa.Column('zip_code', sa.String(), nullable=True),
        sa.Column('country', sa.String(), nullable=True),
        sa.Column('phone_home', sa.LargeBinary(), nullable=True),
        sa.Column('phone_business', sa.LargeBinary(), nullable=True),
        sa.Column('phone_mobile', sa.LargeBinary(), nullable=True),
        sa.Column('email', sa.LargeBinary(), nullable=True),
        sa.Column('responsibility_percentage', sa.Integer(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['laboratory_uid'], ['laboratory.uid'], ),
        sa.ForeignKeyConstraint(['patient_uid'], ['patient.uid'], ),
        sa.PrimaryKeyConstraint('uid'),
        sa.UniqueConstraint('patient_uid')
    )

    # Create clinical_diagnosis table
    op.create_table(
        'clinical_diagnosis',
        sa.Column('uid', sa.String(), nullable=False),
        sa.Column('created_by_uid', sa.String(), nullable=True),
        sa.Column('updated_by_uid', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('laboratory_uid', sa.String(), nullable=True),
        sa.Column('patient_uid', sa.String(), nullable=False),
        sa.Column('analysis_request_uid', sa.String(), nullable=True),
        sa.Column('icd10_code', sa.String(), nullable=False),
        sa.Column('icd10_description', sa.String(), nullable=False),
        sa.Column('diagnosis_date', sa.Date(), nullable=False),
        sa.Column('diagnosis_type', sa.String(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('resolution_date', sa.Date(), nullable=True),
        sa.Column('diagnosing_provider_uid', sa.String(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('pointer', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['analysis_request_uid'], ['analysis_request.uid'], ),
        sa.ForeignKeyConstraint(['diagnosing_provider_uid'], ['user.uid'], ),
        sa.ForeignKeyConstraint(['laboratory_uid'], ['laboratory.uid'], ),
        sa.ForeignKeyConstraint(['patient_uid'], ['patient.uid'], ),
        sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_clinical_diagnosis_icd10_code'), 'clinical_diagnosis', ['icd10_code'], unique=False)
    op.create_index(op.f('ix_clinical_diagnosis_patient_uid'), 'clinical_diagnosis', ['patient_uid'], unique=False)
    op.create_index(op.f('ix_clinical_diagnosis_pointer'), 'clinical_diagnosis', ['pointer'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_clinical_diagnosis_pointer'), table_name='clinical_diagnosis')
    op.drop_index(op.f('ix_clinical_diagnosis_patient_uid'), table_name='clinical_diagnosis')
    op.drop_index(op.f('ix_clinical_diagnosis_icd10_code'), table_name='clinical_diagnosis')
    op.drop_table('clinical_diagnosis')

    op.drop_table('guarantor')

    op.drop_index(op.f('ix_patient_insurance_priority'), table_name='patient_insurance')
    op.drop_table('patient_insurance')

    op.drop_table('patient_medical_history')

    op.drop_index(op.f('ix_insurance_company_name'), table_name='insurance_company')
    op.drop_index(op.f('ix_insurance_company_code'), table_name='insurance_company')
    op.drop_table('insurance_company')
    # ### end Alembic commands ###
